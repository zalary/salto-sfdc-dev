type salesforce.NamedCredential {
  annotations {
    serviceid metadataType {
    }
    boolean hasMetaFile {
    }
    string folderType {
    }
    string folderContentType {
    }
    string suffix {
    }
    string dirName {
    }
  }
  boolean allowMergeFieldsInBody {
  }
  boolean allowMergeFieldsInHeader {
  }
  string authProvider {
    foreignKeyDomain = [
      salesforce.AuthProvider,
    ]
  }
  string authTokenEndpointUrl {
  }
  string awsAccessKey {
  }
  string awsAccessSecret {
  }
  string awsRegion {
  }
  string awsService {
  }
  string calloutStatus {
    _restriction = {
      enforce_value = false
      values = [
        "Disabled",
        "Enabled",
      ]
    }
  }
  string certificate {
    foreignKeyDomain = [
      salesforce.Certificate,
    ]
  }
  string endpoint {
  }
  serviceid fullName {
  }
  boolean generateAuthorizationHeader {
  }
  string jwtAudience {
  }
  string jwtFormulaSubject {
  }
  string jwtIssuer {
  }
  string jwtSigningCertificate {
    foreignKeyDomain = [
      salesforce.Certificate,
    ]
  }
  string jwtTextSubject {
  }
  number jwtValidityPeriodSeconds {
  }
  string label {
  }
  salesforce.NamedCredentialParameter namedCredentialParameters {
  }
  string namedCredentialType {
    _restriction = {
      enforce_value = false
      values = [
        "AnonymousEndpoint",
        "Credentials",
        "Legacy",
        "PrivateEndpoint",
        "SecuredEndpoint",
      ]
    }
  }
  string oauthRefreshToken {
  }
  string oauthScope {
  }
  string oauthToken {
  }
  string outboundNetworkConnection {
    foreignKeyDomain = [
      salesforce.OutboundNetworkConnection,
    ]
  }
  string password {
  }
  string principalType {
    _restriction = {
      enforce_value = false
      values = [
        "Anonymous",
        "NamedUser",
        "PerUser",
        "UserWithImpersonation",
      ]
    }
  }
  string protocol {
    _restriction = {
      enforce_value = false
      values = [
        "ApiKey",
        "AwsSv4",
        "C2c",
        "Certificate",
        "Custom",
        "InternalOAuth",
        "Jwt",
        "JwtExchange",
        "NTLM",
        "NoAuthentication",
        "Oauth",
        "Password",
      ]
    }
  }
  string username {
  }
  string internalId {
    _hidden_value = true
    localOnly = true
  }
  suffix = "namedCredential"
  dirName = "namedCredentials"
  metadataType = "NamedCredential"
}
