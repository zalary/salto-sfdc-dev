type salesforce.FlowScreen {
  annotations {
    serviceid metadataType {
    }
    boolean hasMetaFile {
    }
    string folderType {
    }
    string folderContentType {
    }
    string suffix {
    }
    string dirName {
    }
  }
  boolean allowBack {
  }
  boolean allowFinish {
  }
  boolean allowPause {
  }
  string backButtonLabel {
  }
  salesforce.FlowConnector connector {
  }
  string description {
  }
  string elementSubtype {
    _restriction = {
      enforce_value = false
      values = [
        "AddPromptInstructions",
        "BackgroundStep",
        "FilterCollectionProcessor",
        "InteractiveStep",
        "ManagedContentRoleInteractiveStep",
        "ManagedContentVariantAutoPublishBackgroundStep",
        "ManagedContentVariantAutoUnpublishBackgroundStep",
        "ManagedContentVariantSetLockBackgroundStep",
        "ManagedContentVariantSetReadyBackgroundStep",
        "MuleSoftStep",
        "RecommendationMapCollectionProcessor",
        "ReviewAdvancedApprovalInteractiveStep",
        "SortCollectionProcessor",
        "WaitAttribute",
        "WaitDate",
        "WaitDuration",
        "WaitUntilEvent",
      ]
    }
    foreignKeyDomain = [
      "FlowElementSubtypeDefinition",
    ]
  }
  salesforce.FlowScreenField fields {
  }
  string helpText {
  }
  string label {
  }
  number locationX {
  }
  number locationY {
  }
  string name {
  }
  string nextOrFinishButtonLabel {
  }
  string pauseButtonLabel {
  }
  string pausedText {
  }
  salesforce.FlowMetadataValue processMetadataValues {
  }
  salesforce.FlowScreenRule rules {
  }
  boolean showFooter {
  }
  boolean showHeader {
  }
  metadataType = "FlowScreen"
  salesforce.FlowScreenAction actions {
  }
  salesforce.FlowScreenTrigger triggers {
  }
  _important_values = [
    {
      value = "label"
      highlighted = true
      indexed = false
    },
    {
      value = "name"
      highlighted = true
      indexed = false
    },
    {
      value = "description"
      highlighted = true
      indexed = false
    },
  ]
}
